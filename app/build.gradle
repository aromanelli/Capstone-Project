apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

// https://firebase.google.com/docs/crashlytics/upgrade-sdk?platform=android
// apply plugin: 'io.fabric' // For Firebase Crashlytics
// Add the Firebase Crashlytics plugin.
apply plugin: 'com.google.firebase.crashlytics'

// https://developer.android.com/studio/publish/app-signing#secure-shared-keystore
// Create a variable called keystorePropertiesFile, and initialize it
// to your keystore.properties file, in the rootProject folder ...
def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initialize a new Properties() object called keystoreProperties ...
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object ...
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "info.romanelli.udacity.capstone"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            v2SigningEnabled false
        }
    }
    buildTypes {
        debug {
            shrinkResources false
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Reddit Client Id ...
            // NOTE! Entry in file needs to INCLUDE the double-quotes on either end of the value!
            buildConfigField 'String', "Reddit_Client_Id_Capstone", keystoreProperties['Reddit_Client_Id_Capstone']
            resValue 'string', "reddit_client_id_capstone", keystoreProperties['Reddit_Client_Id_Capstone']
            // Reddit Client Secret ...
            // NOTE! Entry in file needs to INCLUDE the double-quotes on either end of the value!
            buildConfigField 'String', "Reddit_Client_Secret_Capstone", keystoreProperties['Reddit_Client_Secret_Capstone']
            resValue 'string', "reddit_client_secret_capstone", keystoreProperties['Reddit_Client_Secret_Capstone']
        }
        release {
            shrinkResources true
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Reddit Client Id ...
            // NOTE! Entry in file needs to INCLUDE the double-quotes on either end of the value!
            buildConfigField 'String', "Reddit_Client_Id_Capstone", keystoreProperties['Reddit_Client_Id_Capstone']
            resValue 'string', "reddit_client_id_capstone", keystoreProperties['Reddit_Client_Id_Capstone']
            // Reddit Client Secret ...
            // NOTE! Entry in file needs to INCLUDE the double-quotes on either end of the value!
            buildConfigField 'String', "Reddit_Client_Secret_Capstone", keystoreProperties['Reddit_Client_Secret_Capstone']
            resValue 'string', "reddit_client_secret_capstone", keystoreProperties['Reddit_Client_Secret_Capstone']
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    //////////////////////////////////////////////////////////////////////////////////////
    // https://github.com/opacapp/multiline-collapsingtoolbar
    implementation 'net.opacapp:multiline-collapsingtoolbar:27.1.1'
    //////////////////////////////////////////////////////////////////////////////////////
    // https://github.com/openid/AppAuth-Android  https://bintray.com/openid/net.openid/appauth
    implementation 'net.openid:appauth:0.7.1'
    //////////////////////////////////////////////////////////////////////////////////////
    // https://developer.android.com/topic/libraries/support-library/packages
    implementation('com.github.bumptech.glide:glide:4.11.0') {
        // https://bumptech.github.io/glide/doc/download-setup.html#android-sdk-requirements
        exclude group: "com.android.support"
    }
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    //////////////////////////////////////////////////////////////////////////////////////
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0' /* :latest.version */
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    //////////////////////////////////////////////////////////////////////////////////////
    implementation 'androidx.room:room-runtime:2.2.5'
    annotationProcessor 'androidx.room:room-compiler:2.2.5'
    androidTestImplementation 'androidx.room:room-testing:2.2.5'
    //////////////////////////////////////////////////////////////////////////////////////
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    annotationProcessor 'android.arch.lifecycle:common-java8:2.2.0'
    //////////////////////////////////////////////////////////////////////////////////////
    implementation 'androidx.browser:browser:1.2.0' // Overrides 'net.openid:appauth:0.7.1'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    // Overrides 'net.openid:appauth:0.7.1'
    //////////////////////////////////////////////////////////////////////////////////////
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    //////////////////////////////////////////////////////////////////////////////////////
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'com.google.android.material:material:1.2.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    // androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'androidx.test:core:1.3.1-alpha02'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    //////////////////////////////////////////////////////////////////////////////////////
    // https://blog.jetbrains.com/idea/2013/10/better-control-flow-analysis-with-contract-annotations-and-intellij-idea-13/
    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    // Used by info.romanelli.udacity.capstone.util.Assert for @Contract annotation
    implementation 'org.jetbrains:annotations:16.0.3'
    //////////////////////////////////////////////////////////////////////////////////////
    implementation 'com.google.firebase:firebase-core:18.0.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'

    // https://firebase.google.com/docs/crashlytics/upgrade-sdk?platform=android
    // implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'

}
